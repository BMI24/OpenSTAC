<UserControl x:Class="Nodify.Calculator.EditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Nodify.Calculator"
             xmlns:nodify="https://miroiu.github.io/nodify"
             xmlns:shared="clr-namespace:Nodify;assembly=Nodify.Shared" 
             d:DataContext="{d:DesignInstance Type=local:EditorViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <UIElement x:Key="ConnectionAnimationPlaceholder" Opacity="1" />
        <Storyboard x:Key="HighlightConnection">
            <DoubleAnimation Storyboard.TargetProperty="StrokeThickness" 
                             Duration="0:0:0.3" From="3" To="6"  />
            <DoubleAnimation Storyboard.Target="{StaticResource ConnectionAnimationPlaceholder}"
                             Storyboard.TargetProperty="(UIElement.Opacity)" 
                             Duration="0:0:0.3" From="1" To="0.3"  />
        </Storyboard>
        <Style x:Key="ConnectionStyle" TargetType="{x:Type nodify:BaseConnection}">
            <Style.Triggers>
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Name="HighlightConnection" Storyboard="{StaticResource HighlightConnection}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="HighlightConnection" />
                    </Trigger.ExitActions>
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="Stroke" Value="{DynamicResource Connection.StrokeBrush}"/>
            <Setter Property="Fill" Value="{DynamicResource Connection.StrokeBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="ToolTip" Value="Double click to split"/>
            <Setter Property="Source" Value="{Binding Output.Anchor}" />
            <Setter Property="Target" Value="{Binding Input.Anchor}" />
            <Setter Property="SplitCommand" Value="{Binding SplitCommand}" />
        </Style>

        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource GridLinesBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{DynamicResource GridLinesBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="None"
                      ViewportUnits="Absolute"
                      Viewport="0 0 15 15"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                      TileMode="None"
                      ViewportUnits="Absolute"
                      Opacity="0.5"
                      Viewport="0 0 150 150"
                      Transform="{Binding ViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource LargeGridGeometry}" />

        <LinearGradientBrush x:Key="AnimatedBrush" StartPoint="0 0" EndPoint="1 0">
            <GradientStop Color="#6366f1" Offset="0" />
            <GradientStop Color="#a855f7" Offset="0.5" />
            <GradientStop Color="#ec4899" Offset="1" />
        </LinearGradientBrush>
        <Border x:Key="AnimatedBorderPlaceholder" BorderBrush="{StaticResource AnimatedBrush}" />

        <Storyboard x:Key="AnimateBorder" RepeatBehavior="Forever">
        </Storyboard>

        <local:ItemToListConverter x:Key="ItemToListConverter" />
        <local:ConnectorTypeToShapeConverter x:Key="ConnectorTypeToShapeConverter"/>
        

        <DataTemplate x:Key="ConnectionTemplate"
                      DataType="{x:Type local:ConnectionViewModel}">
            <nodify:Connection Source="{Binding Output.Anchor}"
                               Target="{Binding Input.Anchor}"
                               Style="{StaticResource ConnectionStyle}"/>
        </DataTemplate>

        <DataTemplate x:Key="PendingConnectionTemplate"
                      DataType="{x:Type local:PendingConnectionViewModel}">
            <nodify:PendingConnection IsVisible="{Binding IsVisible}"
                                      Source="{Binding Source, Mode=OneWayToSource}"
                                      Target="{Binding Target, Mode=OneWayToSource}"
                                      TargetAnchor="{Binding TargetLocation, Mode=OneWayToSource}"
                                      StartedCommand="{Binding DataContext.StartConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                                      CompletedCommand="{Binding DataContext.CreateConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}" />
        </DataTemplate>

        <Style x:Key="ItemContainerStyle"
               TargetType="{x:Type nodify:ItemContainer}"
               BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
            <Setter Property="Location"
                    Value="{Binding Location}" />
            <Setter Property="IsSelected"
                    Value="{Binding IsSelected}" />
            <Setter Property="ActualSize"
                    Value="{Binding Size, Mode=OneWayToSource}" />
            <Setter Property="BorderBrush" Value="{Binding BorderBrush, Source={StaticResource AnimatedBorderPlaceholder}}" />
            <Setter Property="BorderThickness" Value="2" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <nodify:NodifyEditor DataContext="{Binding Calculator}"
                             ItemsSource="{Binding Operations}"
                             Connections="{Binding Connections}"
                             SelectedItems="{Binding SelectedOperations}"
                             DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                             PendingConnection="{Binding PendingConnection}"
                             PendingConnectionTemplate="{StaticResource PendingConnectionTemplate}"
                             ConnectionTemplate="{StaticResource ConnectionTemplate}"
                             Background="{StaticResource SmallGridLinesDrawingBrush}"
                             ItemContainerStyle="{StaticResource ItemContainerStyle}"
                             GridCellSize="15"
                             x:Name="Editor">
            <nodify:NodifyEditor.Style>
                <Style TargetType="{x:Type nodify:NodifyEditor}"
                       BasedOn="{StaticResource {x:Type nodify:NodifyEditor}}">
                    <Setter Property="ConnectionTemplate"
                            Value="{StaticResource ConnectionTemplate}" />
                </Style>
            </nodify:NodifyEditor.Style>
            <nodify:NodifyEditor.Resources>
                <Style TargetType="{x:Type nodify:Connector}" BasedOn="{StaticResource {x:Type nodify:Connector}}">
                    <Setter Property="Anchor" Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="IsConnected" Value="{Binding IsConnected}" />
                </Style>
                <Style TargetType="{x:Type nodify:NodeInput}"
                       BasedOn="{StaticResource {x:Type nodify:NodeInput}}">
                    <Setter Property="Header"
                            Value="{Binding}" />
                    <Setter Property="IsConnected"
                            Value="{Binding IsConnected}" />
                    <Setter Property="Anchor"
                            Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="ToolTip"
                            Value="{Binding Value}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Title}"
                                               Margin="0 0 5 0" />
                                    <TextBox Text="{Binding Value}"
                                             Visibility="{Binding IsValueSettable, Converter={shared:BooleanToVisibilityConverter}}" />
                                    <TextBox Text="{Binding Value}"
                                             Visibility="{Binding IsValueOnlyInput, Converter={shared:BooleanToVisibilityConverter Negate=False}}" />

                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ConnectorTemplate" Value="{Binding Type, Converter={StaticResource ConnectorTypeToShapeConverter}}"/>
                </Style>

                <Style TargetType="{x:Type nodify:NodeOutput}"
                       BasedOn="{StaticResource {x:Type nodify:NodeOutput}}">
                    <Setter Property="Header"
                            Value="{Binding}" />
                    <Setter Property="IsConnected"
                            Value="{Binding IsConnected}" />
                    <Setter Property="Anchor"
                            Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ConnectorTemplate" Value="{Binding Type, Converter={StaticResource ConnectorTypeToShapeConverter}}"/>
                </Style>

                <DataTemplate DataType="{x:Type local:OperationViewModel}">
                    <nodify:Node Content="{Binding Title}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}" 
                                 MouseDoubleClick="Node_MouseDoubleClick"/>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:KnotNodeViewModel}">
                    <nodify:KnotNode Content="{Binding Connector}" />
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CalculatorInputOperationViewModel}">
                    <DataTemplate.Resources>
                        <Style TargetType="{x:Type nodify:NodeOutput}"
                               BasedOn="{StaticResource {x:Type nodify:NodeOutput}}">
                            <Setter Property="Header"
                                    Value="{Binding}" />
                            <Setter Property="IsConnected"
                                    Value="{Binding IsConnected}" />
                            <Setter Property="Anchor"
                                    Value="{Binding Anchor, Mode=OneWayToSource}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox Text="{Binding Value}"
                                                     IsEnabled="False" />
                                            <TextBlock Text="{Binding Title}"
                                                       Margin="5 0 0 0" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataTemplate.Resources>
                    <nodify:Node Header="{Binding Title}"
                                 Output="{Binding Output}">
                        <StackPanel>
                            <Button Style="{StaticResource IconButton}"
                                    Content="{StaticResource PlusIcon}"
                                    Command="{Binding AddOutputCommand}" />
                            <Button Style="{StaticResource IconButton}"
                                    Content="{StaticResource RemoveKeyIcon}"
                                    Command="{Binding RemoveOutputCommand}" />
                        </StackPanel>
                    </nodify:Node>
                </DataTemplate>

            </nodify:NodifyEditor.Resources>

            <nodify:NodifyEditor.InputBindings>
                <KeyBinding Key="Delete"
                            Command="{Binding DeleteSelectionCommand}" />
            </nodify:NodifyEditor.InputBindings>

            <nodify:NodifyEditor.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard Name="AnimateBorder" Storyboard="{StaticResource AnimateBorder}" />
                </EventTrigger>
            </nodify:NodifyEditor.Triggers>

            <CompositeCollection>
                <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}"
                                           Location="{Binding Location}">
                    <local:OperationsMenuView />
                </nodify:DecoratorContainer>
            </CompositeCollection>
        </nodify:NodifyEditor>

        <Grid Background="{StaticResource LargeGridLinesDrawingBrush}"
              Panel.ZIndex="-2" />
    </Grid>
</UserControl>
